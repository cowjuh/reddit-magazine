[{"C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\index.js":"1","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\reportWebVitals.js":"2","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\App.js":"3","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\CoverPage.js":"4","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\utils\\api.js":"5","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\TableContents.js":"6","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\Navigation.js":"7","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\ErrorPage.js":"8","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\PoetryPage.js":"9","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\FeaturePage.js":"10","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\PhotoGrid.js":"11","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\InputField.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":3880,"mtime":1607727192322,"results":"16","hashOfConfig":"14"},{"size":1223,"mtime":1607727243138,"results":"17","hashOfConfig":"14"},{"size":849,"mtime":1607724254539,"results":"18","hashOfConfig":"14"},{"size":1345,"mtime":1607649618263,"results":"19","hashOfConfig":"14"},{"size":998,"mtime":1607668195088,"results":"20","hashOfConfig":"14"},{"size":197,"mtime":1607634782439,"results":"21","hashOfConfig":"14"},{"size":1448,"mtime":1607655125341,"results":"22","hashOfConfig":"14"},{"size":655,"mtime":1607652460233,"results":"23","hashOfConfig":"14"},{"size":750,"mtime":1607654250498,"results":"24","hashOfConfig":"14"},{"size":1037,"mtime":1607727345796,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"praloy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\index.js",[],["55","56"],"C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\reportWebVitals.js",[],"C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\App.js",["57","58","59","60","61","62"],"C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\CoverPage.js",["63","64"],"C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\utils\\api.js",[],"C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\TableContents.js",[],"C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\Navigation.js",["65","66"],"import React from 'react'\r\nimport {FaArrowRight, FaArrowLeft, FaRedoAlt} from 'react-icons/fa'\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport InputField from './InputField'\r\n\r\nexport default function Navigation() {\r\n    const location = useLocation()\r\n    const path = location.pathname\r\n    var current = parseInt(path.slice(path.length - 1))\r\n    var prev\r\n    var next\r\n    current === 1? prev = 1: prev = current - 1\r\n    current === 9? next = 1: next = current + 1\r\n    \r\n    function handleSubmit(id, subReddit) {\r\n        console.log(subReddit)\r\n    }\r\n\r\n    return(\r\n        <div className='flex-row'>\r\n            <Link exact to={`/${prev}`}>\r\n                <FaArrowLeft color='black'/>\r\n            </Link>\r\n            <p>{current}</p>\r\n            <Link exact to={`/${next}`}>\r\n                <FaArrowRight color='black'/>\r\n            </Link>\r\n            <Link exact to={`/1`}>\r\n                <FaRedoAlt color='black'/>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\ErrorPage.js",[],"C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\PoetryPage.js",["67","68"],"import React from 'react'\r\nimport '../App.css'\r\n\r\nexport default function PoetryPage(props) {\r\n    function decodeHtml(html) {\r\n        var txt = document.createElement(\"textarea\");\r\n        txt.innerHTML = html;\r\n        return txt.value;\r\n    }\r\n\r\n    const htmlStyle = {\r\n        color: 'black',\r\n        maxWidth: '100%',\r\n        textOverflow: \"ellipsis\"\r\n    };\r\n\r\n    const {posts, poems, num} = props\r\n    const poemTitle = poems[num].data.title\r\n    const poemAuthor = poems[num].data.author\r\n    const poemContent = decodeHtml(poems[num].data.selftext_html)\r\n    const poemID = poems[num].data.id\r\n    const imgTitle = posts[num].data.title\r\n    const imgUrl = posts[num].data.url\r\n\r\n    return(\r\n        <div className='cover page poetry'>\r\n            <div className='container poetry'>\r\n                <a className='container poetry-img' href={imgUrl}>\r\n                    <img className='img poetry' src={imgUrl}/>\r\n                    <p className='caption'>{imgTitle}</p>\r\n                </a>\r\n                <h3>{poemTitle}</h3>\r\n                <div className='html-container'>\r\n                    <div style={htmlStyle} dangerouslySetInnerHTML={{__html: poemContent}}/>\r\n                </div>\r\n                <a href={`https://www.reddit.com/user/${poemAuthor}`}>\r\n                    <p className='italic'>Written by {poemAuthor}</p>\r\n                </a>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\FeaturePage.js",["69"],"import React from 'react'\r\nimport '../App.css'\r\n\r\nexport default function FeaturePage(props) {\r\n    const {posts, num} = props\r\n    const author = posts[num].data.author\r\n    const title = posts[num].data.title\r\n    const imgUrl = posts[num].data.url\r\n    const votes = posts[num].data.ups\r\n    return(\r\n        <div className='cover page'>\r\n            <div className='container feature'>\r\n                <img className='img feature' src={imgUrl}></img>\r\n                <p>{title} | {votes} Upvotes</p>\r\n                <a className='normal' href={`https://www.reddit.com/user/${author}`}>by {author}</a>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\PhotoGrid.js",["70","71","72","73","74"],"import React from 'react'\r\nimport '../App.css'\r\n\r\nexport default function PhotoGrid(props) {\r\n    const {posts, num} = props\r\n    const author = posts[num].data.author\r\n    const title = posts[num].data.title\r\n    const imgUrl = posts[num].data.url\r\n    const votes = posts[num].data.ups\r\n    return(\r\n        <div className='cover page'>\r\n            <div className='container col2'>\r\n                {props.posts.map((post) => {\r\n                    return(\r\n                            <a href={post.data.permalink}>\r\n                                <img className='img grid' key={post.data.id} src={post.data.url}></img>\r\n                            </a>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\Jeb\\Documents\\techprojects\\reddit-magazine\\src\\components\\InputField.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":69,"column":16,"nodeType":"81","messageId":"82","endLine":69,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":70,"column":11,"nodeType":"85","messageId":"86","endLine":70,"endColumn":107},{"ruleId":"87","severity":1,"message":"88","line":77,"column":12,"nodeType":"89","messageId":"90","endLine":77,"endColumn":17},{"ruleId":"87","severity":1,"message":"91","line":77,"column":19,"nodeType":"89","messageId":"90","endLine":77,"endColumn":28},{"ruleId":"87","severity":1,"message":"92","line":77,"column":30,"nodeType":"89","messageId":"90","endLine":77,"endColumn":35},{"ruleId":"87","severity":1,"message":"93","line":77,"column":37,"nodeType":"89","messageId":"90","endLine":77,"endColumn":46},{"ruleId":"87","severity":1,"message":"94","line":6,"column":23,"nodeType":"89","messageId":"90","endLine":6,"endColumn":28},{"ruleId":"95","severity":1,"message":"96","line":29,"column":17,"nodeType":"97","endLine":29,"endColumn":51},{"ruleId":"87","severity":1,"message":"98","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":18},{"ruleId":"87","severity":1,"message":"99","line":15,"column":14,"nodeType":"89","messageId":"90","endLine":15,"endColumn":26},{"ruleId":"87","severity":1,"message":"100","line":21,"column":11,"nodeType":"89","messageId":"90","endLine":21,"endColumn":17},{"ruleId":"95","severity":1,"message":"96","line":29,"column":21,"nodeType":"97","endLine":29,"endColumn":63},{"ruleId":"95","severity":1,"message":"96","line":13,"column":17,"nodeType":"97","endLine":13,"endColumn":59},{"ruleId":"87","severity":1,"message":"101","line":6,"column":11,"nodeType":"89","messageId":"90","endLine":6,"endColumn":17},{"ruleId":"87","severity":1,"message":"102","line":7,"column":11,"nodeType":"89","messageId":"90","endLine":7,"endColumn":16},{"ruleId":"87","severity":1,"message":"103","line":8,"column":11,"nodeType":"89","messageId":"90","endLine":8,"endColumn":17},{"ruleId":"87","severity":1,"message":"104","line":9,"column":11,"nodeType":"89","messageId":"90","endLine":9,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":16,"column":33,"nodeType":"97","endLine":16,"endColumn":98},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","'firstPost' is assigned a value but never used.","'poems' is assigned a value but never used.","'firstPoem' is assigned a value but never used.","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InputField' is defined but never used.","'handleSubmit' is defined but never used.","'poemID' is assigned a value but never used.","'author' is assigned a value but never used.","'title' is assigned a value but never used.","'imgUrl' is assigned a value but never used.","'votes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]