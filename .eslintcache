[{"/Users/Jenny/Documents/Programming/reddit-magazine/src/index.js":"1","/Users/Jenny/Documents/Programming/reddit-magazine/src/reportWebVitals.js":"2","/Users/Jenny/Documents/Programming/reddit-magazine/src/App.js":"3","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/CoverPage.js":"4","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/Navigation.js":"5","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/ErrorPage.js":"6","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/TableContents.js":"7","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/InputField.js":"8","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/PhotoGrid.js":"9","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/PoetryPage.js":"10","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/FeaturePage.js":"11","/Users/Jenny/Documents/Programming/reddit-magazine/src/utils/api.js":"12"},{"size":500,"mtime":1608512498016,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608512498017,"results":"15","hashOfConfig":"14"},{"size":4135,"mtime":1608522739517,"results":"16","hashOfConfig":"14"},{"size":1757,"mtime":1608520185748,"results":"17","hashOfConfig":"14"},{"size":1117,"mtime":1608523010334,"results":"18","hashOfConfig":"14"},{"size":231,"mtime":1608515359509,"results":"19","hashOfConfig":"14"},{"size":1514,"mtime":1608521863774,"results":"20","hashOfConfig":"14"},{"size":1057,"mtime":1608515718824,"results":"21","hashOfConfig":"14"},{"size":727,"mtime":1608512498015,"results":"22","hashOfConfig":"14"},{"size":1421,"mtime":1608522264014,"results":"23","hashOfConfig":"14"},{"size":635,"mtime":1608521951110,"results":"24","hashOfConfig":"14"},{"size":823,"mtime":1608512498017,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"3rwahb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/Jenny/Documents/Programming/reddit-magazine/src/index.js",[],["53","54"],"/Users/Jenny/Documents/Programming/reddit-magazine/src/reportWebVitals.js",[],"/Users/Jenny/Documents/Programming/reddit-magazine/src/App.js",["55","56","57","58","59","60","61","62","63","64"],"/Users/Jenny/Documents/Programming/reddit-magazine/src/components/CoverPage.js",["65","66"],"import React from 'react'\nimport '../App.css'\nimport InputField from './InputField'\n\nexport default function CoverPage(props) {\n    const {num, posts, firstPost, handleSubmit} = props\n    // const title = firstPost.title\n    // const author = firstPost.author\n    // const imgUrl = firstPost.url\n    // const permalink = firstPost.permalink\n    // const date = firstPost.created\n    // const subreddit = firstPost.subreddit\n    // const title = posts[num].data.title\n    // const author = posts[num].data.author\n    // const imgUrl = posts[num].data.url\n    // const permalink = posts[num].data.permalink\n    // const date = posts[num].data.created\n    // const subreddit = posts[num].data.subreddit\n\n    return(\n        <div className='cover'>\n            {!posts[0]\n            ? <p>Loading...</p>\n            : <div className='container coverpage'>\n                <p className='small-text'>{posts[num].data.created}</p>\n                <InputField\n                    fontSize={300}\n                    fontWeight={700}\n                    textTransform='uppercase'\n                    placeholder={posts[num].data.subreddit}\n                    value={posts[num].data.subreddit}\n                    type=\"imgSubreddit\"\n                    handleSubmit={handleSubmit}\n                />\n                <div className='subtitle'>\n                    <a className='link normal' href={`https://www.reddit.com/user/${posts[num].data.author}`}>{posts[num].data.author}</a>\n                </div>\n                <img className='img' src={posts[num].data.url}></img>\n                <a className='normal' href={`https://www.reddit.com/${posts[num].data.permalink}`}><p>{posts[num].data.title}</p></a>\n            </div>\n            }\n        </div>\n    )  \n}","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/Navigation.js",["67"],"/Users/Jenny/Documents/Programming/reddit-magazine/src/components/ErrorPage.js",[],"/Users/Jenny/Documents/Programming/reddit-magazine/src/components/TableContents.js",[],"/Users/Jenny/Documents/Programming/reddit-magazine/src/components/InputField.js",[],"/Users/Jenny/Documents/Programming/reddit-magazine/src/components/PhotoGrid.js",["68","69","70","71","72"],"import React from 'react'\nimport '../App.css'\n\nexport default function PhotoGrid(props) {\n    const {posts, num} = props\n    const author = posts[num].data.author\n    const title = posts[num].data.title\n    const imgUrl = posts[num].data.url\n    const votes = posts[num].data.ups\n    return(\n        <div className='cover page'>\n            <div className='container col2'>\n                {props.posts.map((post) => {\n                    return(\n                            <a href={post.data.permalink}>\n                                <img className='img grid' key={post.data.id} src={post.data.url}></img>\n                            </a>\n                    )\n                })}\n            </div>\n        </div>\n    )\n\n}","/Users/Jenny/Documents/Programming/reddit-magazine/src/components/PoetryPage.js",["73"],"/Users/Jenny/Documents/Programming/reddit-magazine/src/components/FeaturePage.js",["74"],"/Users/Jenny/Documents/Programming/reddit-magazine/src/utils/api.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":59,"nodeType":"81","messageId":"82","endLine":8,"endColumn":70},{"ruleId":"83","severity":1,"message":"84","line":67,"column":16,"nodeType":"85","messageId":"86","endLine":67,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":77,"column":16,"nodeType":"85","messageId":"86","endLine":77,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":78,"column":11,"nodeType":"89","messageId":"90","endLine":78,"endColumn":107},{"ruleId":"79","severity":1,"message":"91","line":85,"column":12,"nodeType":"81","messageId":"82","endLine":85,"endColumn":17},{"ruleId":"79","severity":1,"message":"92","line":85,"column":19,"nodeType":"81","messageId":"82","endLine":85,"endColumn":28},{"ruleId":"79","severity":1,"message":"93","line":85,"column":30,"nodeType":"81","messageId":"82","endLine":85,"endColumn":35},{"ruleId":"79","severity":1,"message":"94","line":85,"column":37,"nodeType":"81","messageId":"82","endLine":85,"endColumn":46},{"ruleId":"79","severity":1,"message":"95","line":85,"column":48,"nodeType":"81","messageId":"82","endLine":85,"endColumn":60},{"ruleId":"79","severity":1,"message":"96","line":85,"column":62,"nodeType":"81","messageId":"82","endLine":85,"endColumn":75},{"ruleId":"79","severity":1,"message":"92","line":6,"column":24,"nodeType":"81","messageId":"82","endLine":6,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":38,"column":17,"nodeType":"99","endLine":38,"endColumn":64},{"ruleId":"79","severity":1,"message":"100","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":18},{"ruleId":"79","severity":1,"message":"101","line":6,"column":11,"nodeType":"81","messageId":"82","endLine":6,"endColumn":17},{"ruleId":"79","severity":1,"message":"102","line":7,"column":11,"nodeType":"81","messageId":"82","endLine":7,"endColumn":16},{"ruleId":"79","severity":1,"message":"103","line":8,"column":11,"nodeType":"81","messageId":"82","endLine":8,"endColumn":17},{"ruleId":"79","severity":1,"message":"104","line":9,"column":11,"nodeType":"81","messageId":"82","endLine":9,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":16,"column":33,"nodeType":"99","endLine":16,"endColumn":98},{"ruleId":"97","severity":1,"message":"98","line":23,"column":25,"nodeType":"99","endLine":23,"endColumn":80},{"ruleId":"97","severity":1,"message":"98","line":11,"column":17,"nodeType":"99","endLine":11,"endColumn":72},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'posts' is assigned a value but never used.","'firstPost' is assigned a value but never used.","'poems' is assigned a value but never used.","'firstPoem' is assigned a value but never used.","'imgSubreddit' is assigned a value but never used.","'poemSubreddit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InputField' is defined but never used.","'author' is assigned a value but never used.","'title' is assigned a value but never used.","'imgUrl' is assigned a value but never used.","'votes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]